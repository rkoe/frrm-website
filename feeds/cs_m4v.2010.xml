<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0">
    <channel>
        <title>Chaosseminar - M4V</title>
        <link>http://ulm.ccc.de/ChaosSeminar/</link>
        <description>eine regelmäßige Reihe von öffentlichen Seminarvorträgen</description>
        <language>de-de</language>
        <category>Technology</category>
        <pubDate>Fri, 20 Mar 2015 23:40:11 +0100</pubDate>
        <lastBuildDate>Fri, 20 Mar 2015 23:40:11 +0100</lastBuildDate>
        <itunes:author>CCC Erfa Ulm</itunes:author>
        <itunes:owner>
            <itunes:name>CCC Erfa Ulm</itunes:name>
            <itunes:email>mail@ulm.ccc.de</itunes:email>
        </itunes:owner>
	<itunes:explicit>no</itunes:explicit>	
	<itunes:keywords>ccc,chaos,chaosseminar,hacking,computer,technology,society</itunes:keywords>
        <itunes:category text="International">
            <itunes:category text="German"/>
        </itunes:category>
        <itunes:category text="Technology" />
        <item>
            <title>CS200305: Installation von Debian Linux auf IBM PSeries</title>
            <link>http://ulm.ccc.de/old/chaos-seminar/pseries/</link>
            <description>IBM macht zwar groß Werbung für Linux, aber auf den etwas ``größeren Eisen'' sieht es mit der Umsetzung etwas dürftiger aus als im Marketing. Offiziell unterstützt gerade mal der Suse Linux Enterprise Server 7 die IBM PSeries Rechner, und der kostet knapp 3000 EUR. Das Hauptproblem dabei sind die 64-bittigen Power4-Prozessoren, auf denen ein ``normaler'' LinuxPPC-Kern nicht startet.

``Macht aber nix'', dachten sich Uli, Volker und Markus, und kneteten einfach ein Debian Linux lange genug durch, bis es doch auf der Maschine lief. Was ihnen dabei so alles lustiges passierte, erzählen sie euch im Vortrag.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200305-pseries/cs-200305-pseries_video.mp4</guid>
            <pubDate>Mon, 12 May 2003 20:00:00 +0200</pubDate>
            <itunes:subtitle>IBM macht zwar groß Werbung für Linux, aber auf den etwas ``größeren Eisen'' sieht es mit der Umsetzung etwas dürftiger aus als im Marketing. Offiziell unterstützt gerade mal der Suse Linux Enterprise Server 7 die IBM PSeries Rechner, und der ko ...</itunes:subtitle>
            <itunes:summary>IBM macht zwar groß Werbung für Linux, aber auf den etwas ``größeren Eisen'' sieht es mit der Umsetzung etwas dürftiger aus als im Marketing. Offiziell unterstützt gerade mal der Suse Linux Enterprise Server 7 die IBM PSeries Rechner, und der kostet knapp 3000 EUR. Das Hauptproblem dabei sind die 64-bittigen Power4-Prozessoren, auf denen ein ``normaler'' LinuxPPC-Kern nicht startet.

``Macht aber nix'', dachten sich Uli, Volker und Markus, und kneteten einfach ein Debian Linux lange genug durch, bis es doch auf der Maschine lief. Was ihnen dabei so alles lustiges passierte, erzählen sie euch im Vortrag.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200305-pseries/cs-200305-pseries_video.mp4" length="123177107" type="video/mp4" />
        </item>
        <item>
            <title>CS200309: distributed.net</title>
            <link>http://ulm.ccc.de/old/chaos-seminar/dnet/</link>
            <description>Verteiltes Rechnen im Internet ist seit SETI@Home einer großen Öffentlichkeit bekannt. Das erste große Projekt dieser Art war jedoch distributed.net, welches sich statt mit der Suche nach Aliens mit kryptografischen und mathematischen Projekten beschäftigt. Ihr bekommt einen kleinen Überblick über Geschichte und Motivation solch großer Projekte und einen Einblick un die Infrastruktur von distributed.net. Außerdem gibts speziell zu OGR (Optimale Golomb Ruler) Hintergrundinfos vom Kern--Developer.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200309-dnet/cs-200309-distnet_video.mp4</guid>
            <pubDate>Mon, 08 Sep 2003 20:00:00 +0200</pubDate>
            <itunes:subtitle>Verteiltes Rechnen im Internet ist seit SETI@Home einer großen Öffentlichkeit bekannt. Das erste große Projekt dieser Art war jedoch distributed.net, welches sich statt mit der Suche nach Aliens mit kryptografischen und mathematischen Projekten bes ...</itunes:subtitle>
            <itunes:summary>Verteiltes Rechnen im Internet ist seit SETI@Home einer großen Öffentlichkeit bekannt. Das erste große Projekt dieser Art war jedoch distributed.net, welches sich statt mit der Suche nach Aliens mit kryptografischen und mathematischen Projekten beschäftigt. Ihr bekommt einen kleinen Überblick über Geschichte und Motivation solch großer Projekte und einen Einblick un die Infrastruktur von distributed.net. Außerdem gibts speziell zu OGR (Optimale Golomb Ruler) Hintergrundinfos vom Kern--Developer.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200309-dnet/cs-200309-distnet_video.mp4" length="99236067" type="video/mp4" />
        </item>
        <item>
            <title>CS200402: Scalable Vector Graphics</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2004/02_Scalable_Vector_Graphics</link>
            <description>SVG soll nach der Meinung des W3C der zukünftige Standard für Vektor-Grafiken und Multimedia-Inhalte sein. Dieser Vortrag gibt eine Übersicht der Features dieses Web-Grafik-Formates, und stellt einige Beispiele der verfügbaren Software vor.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200402-svg/cs-200402-svg_video.mp4</guid>
            <pubDate>Mon, 09 Feb 2004 20:00:00 +0100</pubDate>
            <itunes:subtitle>SVG soll nach der Meinung des W3C der zukünftige Standard für Vektor-Grafiken und Multimedia-Inhalte sein. Dieser Vortrag gibt eine Übersicht der Features dieses Web-Grafik-Formates, und stellt einige Beispiele der verfügbaren Software vor. ...</itunes:subtitle>
            <itunes:summary>SVG soll nach der Meinung des W3C der zukünftige Standard für Vektor-Grafiken und Multimedia-Inhalte sein. Dieser Vortrag gibt eine Übersicht der Features dieses Web-Grafik-Formates, und stellt einige Beispiele der verfügbaren Software vor.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200402-svg/cs-200402-svg_video.mp4" length="136421136" type="video/mp4" />
        </item>
        <item>
            <title>CS200411: The Danger of Software Patents</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2004/11_The_Danger_of_Software_Patents</link>
            <description>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source developers see them as a serious threat to their profession.

Richard Stallman will explain how software patents obstruct software development. Software patents are patents that cover software ideas. They restrict the development of software, so that every design decision brings a risk of getting sued. Patents in other fields restrict factories, but software patents restrict every computer user. Economic research shows that they even retard progress.

About the lecturer: Richard Stallman is the founder of the GNU Project, launched in 1984 to develop the free software operating system GNU. He is the principal author of the GNU Compiler Collection (gcc), the GNU symbolic debugger (gdb), GNU Emacs, and various other programs for the GNU operating system.

Stallman graduated from Harvard in 1974 with a BA in physics. During his college years, he also worked as a staff hacker at the MIT Artificial Intelligence Lab, learning operating system development by doing it. In January 1984 he resigned from MIT to start the GNU project. Today he is one of the leaders of the free software movement and president of the Free Software Foundation (FSF).</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200411-rms/cs-200411-rms-questions_video.mp4</guid>
            <pubDate>Thu, 04 Nov 2004 19:00:00 +0100</pubDate>
            <itunes:subtitle>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source ...</itunes:subtitle>
            <itunes:summary>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source developers see them as a serious threat to their profession.

Richard Stallman will explain how software patents obstruct software development. Software patents are patents that cover software ideas. They restrict the development of software, so that every design decision brings a risk of getting sued. Patents in other fields restrict factories, but software patents restrict every computer user. Economic research shows that they even retard progress.

About the lecturer: Richard Stallman is the founder of the GNU Project, launched in 1984 to develop the free software operating system GNU. He is the principal author of the GNU Compiler Collection (gcc), the GNU symbolic debugger (gdb), GNU Emacs, and various other programs for the GNU operating system.

Stallman graduated from Harvard in 1974 with a BA in physics. During his college years, he also worked as a staff hacker at the MIT Artificial Intelligence Lab, learning operating system development by doing it. In January 1984 he resigned from MIT to start the GNU project. Today he is one of the leaders of the free software movement and president of the Free Software Foundation (FSF).</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200411-rms/cs-200411-rms-questions_video.mp4" length="47073986" type="video/mp4" />
        </item>
        <item>
            <title>CS200411: The Danger of Software Patents</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2004/11_The_Danger_of_Software_Patents</link>
            <description>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source developers see them as a serious threat to their profession.

Richard Stallman will explain how software patents obstruct software development. Software patents are patents that cover software ideas. They restrict the development of software, so that every design decision brings a risk of getting sued. Patents in other fields restrict factories, but software patents restrict every computer user. Economic research shows that they even retard progress.

About the lecturer: Richard Stallman is the founder of the GNU Project, launched in 1984 to develop the free software operating system GNU. He is the principal author of the GNU Compiler Collection (gcc), the GNU symbolic debugger (gdb), GNU Emacs, and various other programs for the GNU operating system.

Stallman graduated from Harvard in 1974 with a BA in physics. During his college years, he also worked as a staff hacker at the MIT Artificial Intelligence Lab, learning operating system development by doing it. In January 1984 he resigned from MIT to start the GNU project. Today he is one of the leaders of the free software movement and president of the Free Software Foundation (FSF).</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200411-rms/cs-200411-rms_video.mp4</guid>
            <pubDate>Thu, 04 Nov 2004 19:00:00 +0100</pubDate>
            <itunes:subtitle>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source ...</itunes:subtitle>
            <itunes:summary>Forced by the US, Europe is just about to adopt a new form of patents that were illegal up to now: Patents on Software. Whereas most big companies support the idea of software patents, most small and medium sized businesses as well as most open source developers see them as a serious threat to their profession.

Richard Stallman will explain how software patents obstruct software development. Software patents are patents that cover software ideas. They restrict the development of software, so that every design decision brings a risk of getting sued. Patents in other fields restrict factories, but software patents restrict every computer user. Economic research shows that they even retard progress.

About the lecturer: Richard Stallman is the founder of the GNU Project, launched in 1984 to develop the free software operating system GNU. He is the principal author of the GNU Compiler Collection (gcc), the GNU symbolic debugger (gdb), GNU Emacs, and various other programs for the GNU operating system.

Stallman graduated from Harvard in 1974 with a BA in physics. During his college years, he also worked as a staff hacker at the MIT Artificial Intelligence Lab, learning operating system development by doing it. In January 1984 he resigned from MIT to start the GNU project. Today he is one of the leaders of the free software movement and president of the Free Software Foundation (FSF).</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200411-rms/cs-200411-rms_video.mp4" length="145512497" type="video/mp4" />
        </item>
        <item>
            <title>CS200412: Personal Firewalls</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2004/12_Personal_Firewalls</link>
            <description>Firewalls gelten als Inbegriff der Computersicherheit. Deshalb haben sich clevere Marketingstrategen gedacht man könnte doch für jeden Rechner eine verkaufen.

Dabei werden die Benutzer bezüglich der Funktionalität getäuscht. Es wird eine Sicherheit versprochen, die eine Personal Firewall prinzipbedingt nicht bringen kann. Statt dessen ermöglichen sich durch das Vorhandensein einer Personal Firewall ganz neue Angriffsmöglichkeiten auf ein System.

Im Vortrag wird erklärt, wie Personal Firewalls funktionieren. An Hand von ein paar Beispielen wird anschließend gezeigt, wie man eine Personal Firewall umgehen oder angreifen kann.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200412-pfw/cs-200412-pfw_video.mp4</guid>
            <pubDate>Mon, 13 Dec 2004 20:00:00 +0100</pubDate>
            <itunes:subtitle>Firewalls gelten als Inbegriff der Computersicherheit. Deshalb haben sich clevere Marketingstrategen gedacht man könnte doch für jeden Rechner eine verkaufen.

Dabei werden die Benutzer bezüglich der Funktionalität getäuscht. Es wird eine Sicherh ...</itunes:subtitle>
            <itunes:summary>Firewalls gelten als Inbegriff der Computersicherheit. Deshalb haben sich clevere Marketingstrategen gedacht man könnte doch für jeden Rechner eine verkaufen.

Dabei werden die Benutzer bezüglich der Funktionalität getäuscht. Es wird eine Sicherheit versprochen, die eine Personal Firewall prinzipbedingt nicht bringen kann. Statt dessen ermöglichen sich durch das Vorhandensein einer Personal Firewall ganz neue Angriffsmöglichkeiten auf ein System.

Im Vortrag wird erklärt, wie Personal Firewalls funktionieren. An Hand von ein paar Beispielen wird anschließend gezeigt, wie man eine Personal Firewall umgehen oder angreifen kann.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200412-pfw/cs-200412-pfw_video.mp4" length="185533351" type="video/mp4" />
        </item>
        <item>
            <title>CS200501: (Un)Sicheres Windows am Heim-PC</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/01_%28Un%29Sicheres_Windows_am_Heim-PC</link>
            <description>Personal Firewalls? Virenscanner? Internet-Security-Paket?

Das Aufrüsten der Abwehr auf dem PC zuhause geht weiter. Ein Milliardenmarkt entsteht. Aber: sind diese Maßnahmen eigentlich sinnvoll? Stellt sich für den Heimanwender nicht eher die Frage: "Ich möchte doch nur E-Mails verschicken und surfen. Muss ich jetzt meinen PC zur Festung aufrüsten?"

Dieser Vortrag zeigt einfache Möglichkeiten auf, wie man seinen Heimarbeitsplatz auch als Laie vor vielen Gefährdungen mit einfachen Mitteln schützen kann, ohne gleich ein Arsenal von Abwehrsoftware zu installieren.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200501-winsec/cs-200501-winsec_video.mp4</guid>
            <pubDate>Mon, 10 Jan 2005 20:00:00 +0100</pubDate>
            <itunes:subtitle>Personal Firewalls? Virenscanner? Internet-Security-Paket?

Das Aufrüsten der Abwehr auf dem PC zuhause geht weiter. Ein Milliardenmarkt entsteht. Aber: sind diese Maßnahmen eigentlich sinnvoll? Stellt sich für den Heimanwender nicht eher die Frage ...</itunes:subtitle>
            <itunes:summary>Personal Firewalls? Virenscanner? Internet-Security-Paket?

Das Aufrüsten der Abwehr auf dem PC zuhause geht weiter. Ein Milliardenmarkt entsteht. Aber: sind diese Maßnahmen eigentlich sinnvoll? Stellt sich für den Heimanwender nicht eher die Frage: "Ich möchte doch nur E-Mails verschicken und surfen. Muss ich jetzt meinen PC zur Festung aufrüsten?"

Dieser Vortrag zeigt einfache Möglichkeiten auf, wie man seinen Heimarbeitsplatz auch als Laie vor vielen Gefährdungen mit einfachen Mitteln schützen kann, ohne gleich ein Arsenal von Abwehrsoftware zu installieren.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200501-winsec/cs-200501-winsec_video.mp4" length="223032171" type="video/mp4" />
        </item>
        <item>
            <title>CS200502: Semantic Web</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/02_SemanticWeb</link>
            <description>Nach der "Web-Revolution" basteln Berners-Lee und seine Mitstreiter im W3C längst an einem Nachfolger, dem Semantic Web. Ziel ist die Entwicklung von Technologien, mit welchen sich selbsterklärende Dokumente erstellen lassen. Suchmaschinen sollen beispielsweise erkennen können, dass der Begriff "Kuchen" auf einer Seite über die schwäbische Alb sich auf einen Ort bezieht, während er auf anderen Seiten vielleicht ein stark zuckerhaltiges Lebensmittel beschreibt. Und auch dass das Konzept des Kuchens auf einer deutschsprachigen Seite identisch ist zu "Cake" auf englischen Seiten. Wichtige Standards wie RDF oder OWL werden im Vortrag ausführlich vorgestellt.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200502-semweb/cs-200502-semweb_video.mp4</guid>
            <pubDate>Mon, 14 Feb 2005 20:00:00 +0100</pubDate>
            <itunes:subtitle>Nach der "Web-Revolution" basteln Berners-Lee und seine Mitstreiter im W3C längst an einem Nachfolger, dem Semantic Web. Ziel ist die Entwicklung von Technologien, mit welchen sich selbsterklärende Dokumente erstellen lassen. Suchmaschinen sollen be ...</itunes:subtitle>
            <itunes:summary>Nach der "Web-Revolution" basteln Berners-Lee und seine Mitstreiter im W3C längst an einem Nachfolger, dem Semantic Web. Ziel ist die Entwicklung von Technologien, mit welchen sich selbsterklärende Dokumente erstellen lassen. Suchmaschinen sollen beispielsweise erkennen können, dass der Begriff "Kuchen" auf einer Seite über die schwäbische Alb sich auf einen Ort bezieht, während er auf anderen Seiten vielleicht ein stark zuckerhaltiges Lebensmittel beschreibt. Und auch dass das Konzept des Kuchens auf einer deutschsprachigen Seite identisch ist zu "Cake" auf englischen Seiten. Wichtige Standards wie RDF oder OWL werden im Vortrag ausführlich vorgestellt.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200502-semweb/cs-200502-semweb_video.mp4" length="184139465" type="video/mp4" />
        </item>
        <item>
            <title>CS200503: Jabber</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/03_Jabber</link>
            <description>Aus Frust über die bestehenden Instant Messenger Systeme wird seit 1999 das offene IM-Protokoll "Jabber" entwickelt, das inzwischen unter dem Namen XMPP RFC-Standard ist. Inzwischen existieren alle möglichen Anwendungen für Jabber, von vernetzten Rollenspielen und Cobrowsing bis hin zu Telefonie-Signalisierung und Email-Protokollen. Nach einer kurzen Einleitung für Jabber-Einsteiger soll dieser Vortrag einen groben Abriss über aktuellen Zustand und Möglichkeiten von Jabber geben.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200503-jabber/cs-200503-jabber_video.mp4</guid>
            <pubDate>Mon, 14 Mar 2005 20:00:00 +0100</pubDate>
            <itunes:subtitle>Aus Frust über die bestehenden Instant Messenger Systeme wird seit 1999 das offene IM-Protokoll "Jabber" entwickelt, das inzwischen unter dem Namen XMPP RFC-Standard ist. Inzwischen existieren alle möglichen Anwendungen für Jabber, von vernetzten R ...</itunes:subtitle>
            <itunes:summary>Aus Frust über die bestehenden Instant Messenger Systeme wird seit 1999 das offene IM-Protokoll "Jabber" entwickelt, das inzwischen unter dem Namen XMPP RFC-Standard ist. Inzwischen existieren alle möglichen Anwendungen für Jabber, von vernetzten Rollenspielen und Cobrowsing bis hin zu Telefonie-Signalisierung und Email-Protokollen. Nach einer kurzen Einleitung für Jabber-Einsteiger soll dieser Vortrag einen groben Abriss über aktuellen Zustand und Möglichkeiten von Jabber geben.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200503-jabber/cs-200503-jabber_video.mp4" length="210498662" type="video/mp4" />
        </item>
        <item>
            <title>CS200504: Biometrische Pässe</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/04_Biometrische_P%E4sse</link>
            <description>Als kurzfristige Alternative zum ausgefallenen ChaosSeminar zur TkÜV gibt es einen Kurzvortrag mit anschließender Diskussionsmöglichkeit über die "biometrischen Pässe" und deren Sicherheitsfeatures. Der Vortrag versucht, die Inhalte des Beitrags eines BSI-Mitarbeiters zusammenzufassen, den dieser auf der "Conference on Security in Pervasive Computing" hielt.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200504-epass/cs-200504-epass_video.m4v</guid>
            <pubDate>Mon, 11 Apr 2005 20:00:00 +0200</pubDate>
            <itunes:subtitle>Als kurzfristige Alternative zum ausgefallenen ChaosSeminar zur TkÜV gibt es einen Kurzvortrag mit anschließender Diskussionsmöglichkeit über die "biometrischen Pässe" und deren Sicherheitsfeatures. Der Vortrag versucht, die Inhalte des Beitrags  ...</itunes:subtitle>
            <itunes:summary>Als kurzfristige Alternative zum ausgefallenen ChaosSeminar zur TkÜV gibt es einen Kurzvortrag mit anschließender Diskussionsmöglichkeit über die "biometrischen Pässe" und deren Sicherheitsfeatures. Der Vortrag versucht, die Inhalte des Beitrags eines BSI-Mitarbeiters zusammenzufassen, den dieser auf der "Conference on Security in Pervasive Computing" hielt.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200504-epass/cs-200504-epass_video.m4v" length="253770968" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200506: Web Security</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/06_WebSecurity</link>
            <description>Immer mehr Sicherheitsvorfälle in IT-Systemen gehen auf das Konto von unsicheren Web-Servern oder -Clients. Seien es Buffer-Overflows in der Software, fehlerhafte Web-Anwendungen oder überforderte Benutzer, Angriffsmöglichkeiten gibt es zu Hauf. Der Vortrag zeigt Schwachstellen und mögliche Angriffe, geht aber auch darauf ein, wie Benutzer und Softwareentwickler das World Wide Web etwas sicherer machen können.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200506-websec/cs-200506-websec_video.m4v</guid>
            <pubDate>Mon, 13 Jun 2005 20:00:00 +0200</pubDate>
            <itunes:subtitle>Immer mehr Sicherheitsvorfälle in IT-Systemen gehen auf das Konto von unsicheren Web-Servern oder -Clients. Seien es Buffer-Overflows in der Software, fehlerhafte Web-Anwendungen oder überforderte Benutzer, Angriffsmöglichkeiten gibt es zu Hauf. De ...</itunes:subtitle>
            <itunes:summary>Immer mehr Sicherheitsvorfälle in IT-Systemen gehen auf das Konto von unsicheren Web-Servern oder -Clients. Seien es Buffer-Overflows in der Software, fehlerhafte Web-Anwendungen oder überforderte Benutzer, Angriffsmöglichkeiten gibt es zu Hauf. Der Vortrag zeigt Schwachstellen und mögliche Angriffe, geht aber auch darauf ein, wie Benutzer und Softwareentwickler das World Wide Web etwas sicherer machen können.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200506-websec/cs-200506-websec_video.m4v" length="450853955" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200507: C++</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/07_C%2B%2B</link>
            <description>Bei wohl keiner Programiersprache ist der Unterschied zwischen Kennen und Können so groß wie bei C++. Als "C with classes" angefangen, hat es sich mittlerweile zu einer der komplexesten in der Praxis eingesetzen Sprachen entwickelt. Die Sprache stellt dem Entwickler mächtige Abstraktionswerkzeuge zur Verfügung, deren Kosten zur Laufzeit extrem gering sind - vorausgesetzt der Compiler ist gut. Somit eignet sich C++ für performance- oder resourcenkritische Applikationen, die man objektorientiert modellieren möchte. Es gibt aber auch hässliche Elemente der Sprache, von denen einige auf die Verwandtschaft zu C und andere auf Performance- oder Praktikabilitätsgründe zurückzuführen sind. C++ ist einfach ein pragmatischer Kompromiss. Der Vortrag bietet eine Übersicht über die wichtigsten Konzepte der Sprache. Auf Grund des engen Zeitrahmens müssen ein paar Dinge für das Verständniss vorausgesetzt werden. Dazu gehört Wissen über das Programierpardigma der Objektorientierung und Kenntniss der C-Syntax.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200507-cpp/cs-200507-cpp_video.m4v</guid>
            <pubDate>Mon, 11 Jul 2005 20:00:00 +0200</pubDate>
            <itunes:subtitle>Bei wohl keiner Programiersprache ist der Unterschied zwischen Kennen und Können so groß wie bei C++. Als "C with classes" angefangen, hat es sich mittlerweile zu einer der komplexesten in der Praxis eingesetzen Sprachen entwickelt. Die Sprache stel ...</itunes:subtitle>
            <itunes:summary>Bei wohl keiner Programiersprache ist der Unterschied zwischen Kennen und Können so groß wie bei C++. Als "C with classes" angefangen, hat es sich mittlerweile zu einer der komplexesten in der Praxis eingesetzen Sprachen entwickelt. Die Sprache stellt dem Entwickler mächtige Abstraktionswerkzeuge zur Verfügung, deren Kosten zur Laufzeit extrem gering sind - vorausgesetzt der Compiler ist gut. Somit eignet sich C++ für performance- oder resourcenkritische Applikationen, die man objektorientiert modellieren möchte. Es gibt aber auch hässliche Elemente der Sprache, von denen einige auf die Verwandtschaft zu C und andere auf Performance- oder Praktikabilitätsgründe zurückzuführen sind. C++ ist einfach ein pragmatischer Kompromiss. Der Vortrag bietet eine Übersicht über die wichtigsten Konzepte der Sprache. Auf Grund des engen Zeitrahmens müssen ein paar Dinge für das Verständniss vorausgesetzt werden. Dazu gehört Wissen über das Programierpardigma der Objektorientierung und Kenntniss der C-Syntax.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200507-cpp/cs-200507-cpp_video.m4v" length="398920008" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200509: Mac OS X Hacks</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/09_Mac_OS_X_Hacks</link>
            <description>Mac OS X erfreut sich auch in Hackerzirkeln einer gewissen Beliebtheit. Dementsprechend wollen wir uns einige spaßigere Aktivitäten anschauen, die auch unter Mac OS X für Erheiterung sorgen.

Subthemen: FireWire DMA, Cocoa ohne ObjC, Krypto- und Securityservices, Packagemanager, MACH Injections, Angriffsvektoren für Würmer, Highlight aus den letzten SecurityUpdates, Clustering, Forensics und Hardening, Buffer Overflows, OpenFirmware, ...</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200509-machacks/cs-200509-machacks_video.m4v</guid>
            <pubDate>Mon, 12 Sep 2005 20:00:00 +0200</pubDate>
            <itunes:subtitle>Mac OS X erfreut sich auch in Hackerzirkeln einer gewissen Beliebtheit. Dementsprechend wollen wir uns einige spaßigere Aktivitäten anschauen, die auch unter Mac OS X für Erheiterung sorgen.

Subthemen: FireWire DMA, Cocoa ohne ObjC, Krypto- und Se ...</itunes:subtitle>
            <itunes:summary>Mac OS X erfreut sich auch in Hackerzirkeln einer gewissen Beliebtheit. Dementsprechend wollen wir uns einige spaßigere Aktivitäten anschauen, die auch unter Mac OS X für Erheiterung sorgen.

Subthemen: FireWire DMA, Cocoa ohne ObjC, Krypto- und Securityservices, Packagemanager, MACH Injections, Angriffsvektoren für Würmer, Highlight aus den letzten SecurityUpdates, Clustering, Forensics und Hardening, Buffer Overflows, OpenFirmware, ...</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200509-machacks/cs-200509-machacks_video.m4v" length="339519701" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200510: Java - Evolution einer Sprache</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/10_Java_-_Evolution_einer_Sprache</link>
            <description>Während Java 1.1 in den Sprachmitteln extrem minimalistisch designt war, wurden in den darauffolgenden Releases immer mehr Erweiterungen eingebaut. Beispiele dafür sind anonyme und innere Klassen, Assertions, Enumerations und Generics. Dieser Vortrag will die historische Entwicklung der Sprache von "zu minimalistisch" bis hin zu "durchaus brauchbar" illustrieren und gleichzeitig Umsteigern und Aufsteigern einen Überblick über die neuen Features geben, und deren Vor- und Nachteile aufzeigen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200510-java/cs-200510-java_video.m4v</guid>
            <pubDate>Mon, 10 Oct 2005 20:00:00 +0200</pubDate>
            <itunes:subtitle>Während Java 1.1 in den Sprachmitteln extrem minimalistisch designt war, wurden in den darauffolgenden Releases immer mehr Erweiterungen eingebaut. Beispiele dafür sind anonyme und innere Klassen, Assertions, Enumerations und Generics. Dieser Vortra ...</itunes:subtitle>
            <itunes:summary>Während Java 1.1 in den Sprachmitteln extrem minimalistisch designt war, wurden in den darauffolgenden Releases immer mehr Erweiterungen eingebaut. Beispiele dafür sind anonyme und innere Klassen, Assertions, Enumerations und Generics. Dieser Vortrag will die historische Entwicklung der Sprache von "zu minimalistisch" bis hin zu "durchaus brauchbar" illustrieren und gleichzeitig Umsteigern und Aufsteigern einen Überblick über die neuen Features geben, und deren Vor- und Nachteile aufzeigen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200510-java/cs-200510-java_video.m4v" length="366418835" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200511: Informationstheorie</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/11_Informationstheorie</link>
            <description>Für das Problem, Informationen über einen gestörten Kanal zu übertragen, lieferte Claude E. Shannon 1948 mit seinem Aufsatz "A Mathematical Theory of Communication" ein mathematisches Modell, dessen Mächtigkeit und Tragweite der Wissenschaft erst mit der Zeit klar wurde.

Heute ist unumstritten, dass Shannon eine neue Wissenschaft begründet hat, denn seine Arbeit ist die Grundlage für die gesammte Telekommunikation. Das betrifft Themen wie z.B. die Datenkompression, die Kodierung, die Informationsübertragung und nicht zuletzt die Kryptographie.

Der Vortrag gibt eine kleine Einführung in die Informationstheorie, ohne allzu mathematisch zu werden und erläutert anschaulich die wichtigsten Begriffe und Zusammenhänge.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200511-infotheorie/cs-200511-infotheorie_video.m4v</guid>
            <pubDate>Mon, 14 Nov 2005 20:00:00 +0100</pubDate>
            <itunes:subtitle>Für das Problem, Informationen über einen gestörten Kanal zu übertragen, lieferte Claude E. Shannon 1948 mit seinem Aufsatz "A Mathematical Theory of Communication" ein mathematisches Modell, dessen Mächtigkeit und Tragweite der Wissenschaft erst ...</itunes:subtitle>
            <itunes:summary>Für das Problem, Informationen über einen gestörten Kanal zu übertragen, lieferte Claude E. Shannon 1948 mit seinem Aufsatz "A Mathematical Theory of Communication" ein mathematisches Modell, dessen Mächtigkeit und Tragweite der Wissenschaft erst mit der Zeit klar wurde.

Heute ist unumstritten, dass Shannon eine neue Wissenschaft begründet hat, denn seine Arbeit ist die Grundlage für die gesammte Telekommunikation. Das betrifft Themen wie z.B. die Datenkompression, die Kodierung, die Informationsübertragung und nicht zuletzt die Kryptographie.

Der Vortrag gibt eine kleine Einführung in die Informationstheorie, ohne allzu mathematisch zu werden und erläutert anschaulich die wichtigsten Begriffe und Zusammenhänge.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200511-infotheorie/cs-200511-infotheorie_video.m4v" length="347807843" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200512: Linux From Scratch</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2005/12_Linux_From_Scratch</link>
            <description>Fast alle aktuellen Betriebssystem-Distributionen kommen als CDs oder DVDs mit Binärpaketen und häufig begleitet von vielen Seiten Dokumentation heraus. Das aus einem HOWTO hervorgegangene Projekt Linux From Scratch dagegen liefert Benutzern, die ein Betriebssystem installieren möchten, nur das Handbuch, das Schritt für Schritt erklärt, wie Systemkern und Basisprogramme ausgehend vom Quellcode selbst kompiliert und installiert werden.

Der Vortrag gibt einen Überblick über die Geschichte und die Build-Methoden von Linux From Scratch seit seiner ersten Version im Jahr 1999. Es wird gezeigt, wie trotz zirkulärer Paketabhängigkeiten eine funktionierende Toolchain als Herzstück eines LFS-Systems konstruiert wird. Technische Details kommen beim Blick unter die Haube der Nicht-Distribution mit dem Slogan „Your distro. Your rules.“ und dem Ziel, zu lehren, was im Inneren eines Linux-Systems vorgeht, nicht zu kurz.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200512-lfs/cs-200512-lfs_video.m4v</guid>
            <pubDate>Mon, 12 Dec 2005 20:00:00 +0100</pubDate>
            <itunes:subtitle>Fast alle aktuellen Betriebssystem-Distributionen kommen als CDs oder DVDs mit Binärpaketen und häufig begleitet von vielen Seiten Dokumentation heraus. Das aus einem HOWTO hervorgegangene Projekt Linux From Scratch dagegen liefert Benutzern, die ei ...</itunes:subtitle>
            <itunes:summary>Fast alle aktuellen Betriebssystem-Distributionen kommen als CDs oder DVDs mit Binärpaketen und häufig begleitet von vielen Seiten Dokumentation heraus. Das aus einem HOWTO hervorgegangene Projekt Linux From Scratch dagegen liefert Benutzern, die ein Betriebssystem installieren möchten, nur das Handbuch, das Schritt für Schritt erklärt, wie Systemkern und Basisprogramme ausgehend vom Quellcode selbst kompiliert und installiert werden.

Der Vortrag gibt einen Überblick über die Geschichte und die Build-Methoden von Linux From Scratch seit seiner ersten Version im Jahr 1999. Es wird gezeigt, wie trotz zirkulärer Paketabhängigkeiten eine funktionierende Toolchain als Herzstück eines LFS-Systems konstruiert wird. Technische Details kommen beim Blick unter die Haube der Nicht-Distribution mit dem Slogan „Your distro. Your rules.“ und dem Ziel, zu lehren, was im Inneren eines Linux-Systems vorgeht, nicht zu kurz.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200512-lfs/cs-200512-lfs_video.m4v" length="339214433" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200601: Distrobashing</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2006/01_Distrobashing</link>
            <description>Welche Linuxdistribution ist die beste? Oder soll ich doch lieber Opendarwin benutzen? Windows ists! Oder doch nicht? Die Frage nach dem richtigen Betriebssystem lässt sich nicht so einfach objektiv beantworten und schon gar nicht pauschal. Eigentlich ist es schon eher eine Glaubensfrage. Heute kommen die Priester zu Wort und werden anschliessend vom Publikum auf dem Scheiterhaufen verbrannt.

Da es sehr schwer war genug Priester zu finden unterstützt uns diesmal die lugu tatkräftig. Wir suchen allerdings noch Vertreter u.a. für SuSE, Gentoo, *BSD oder beliebig anderen Alternativen. Wenn es dir also am Herzen liegt, die Vorteile deines OS anderen näher zu bringen, komm einfach vorbei.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200601-distrobashing/cs-200601-distrobashing_video.m4v</guid>
            <pubDate>Mon, 09 Jan 2006 20:00:00 +0100</pubDate>
            <itunes:subtitle>Welche Linuxdistribution ist die beste? Oder soll ich doch lieber Opendarwin benutzen? Windows ists! Oder doch nicht? Die Frage nach dem richtigen Betriebssystem lässt sich nicht so einfach objektiv beantworten und schon gar nicht pauschal. Eigentlic ...</itunes:subtitle>
            <itunes:summary>Welche Linuxdistribution ist die beste? Oder soll ich doch lieber Opendarwin benutzen? Windows ists! Oder doch nicht? Die Frage nach dem richtigen Betriebssystem lässt sich nicht so einfach objektiv beantworten und schon gar nicht pauschal. Eigentlich ist es schon eher eine Glaubensfrage. Heute kommen die Priester zu Wort und werden anschliessend vom Publikum auf dem Scheiterhaufen verbrannt.

Da es sehr schwer war genug Priester zu finden unterstützt uns diesmal die lugu tatkräftig. Wir suchen allerdings noch Vertreter u.a. für SuSE, Gentoo, *BSD oder beliebig anderen Alternativen. Wenn es dir also am Herzen liegt, die Vorteile deines OS anderen näher zu bringen, komm einfach vorbei.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200601-distrobashing/cs-200601-distrobashing_video.m4v" length="155677875" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200602: Weird Programming III</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2006/02_Weird_Programming_III</link>
            <description>Der dritte Vortrag unserer beliebten Reihe beschäftigt sich wie die Vorgänger mit ausgefallenen Programmiersprachen und Programmen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200602-weirdprog3/cs-200602-weirdprog3_video.m4v</guid>
            <pubDate>Mon, 13 Feb 2006 20:00:00 +0100</pubDate>
            <itunes:subtitle>Der dritte Vortrag unserer beliebten Reihe beschäftigt sich wie die Vorgänger mit ausgefallenen Programmiersprachen und Programmen. ...</itunes:subtitle>
            <itunes:summary>Der dritte Vortrag unserer beliebten Reihe beschäftigt sich wie die Vorgänger mit ausgefallenen Programmiersprachen und Programmen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200602-weirdprog3/cs-200602-weirdprog3_video.m4v" length="84346125" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200603: Polizeidatenbanken</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2006/03_Polizeidatenbanken</link>
            <description>Polizei und Verfassungsschutz sammeln eifrig Daten und speichern sie. Die Realität zwischen technischer Inkompetenz, Überwachungswahn und politischen Stunts ist dabei weit entfernt von Szenarien Marke 1984. Und doch gibt es Gründe genug, den Behörden auf die Finger zu schauen. Der Vortrag beschäftigt sich mit diesen Gründen und wird auch Möglichkeiten zur Selbsthilfe diskutieren. Siehe auch http://www.datenschmutz.de</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200603-polizeidb/cs-200603-polizeidb_video.m4v</guid>
            <pubDate>Mon, 13 Mar 2006 20:00:00 +0100</pubDate>
            <itunes:subtitle>Polizei und Verfassungsschutz sammeln eifrig Daten und speichern sie. Die Realität zwischen technischer Inkompetenz, Überwachungswahn und politischen Stunts ist dabei weit entfernt von Szenarien Marke 1984. Und doch gibt es Gründe genug, den Behör ...</itunes:subtitle>
            <itunes:summary>Polizei und Verfassungsschutz sammeln eifrig Daten und speichern sie. Die Realität zwischen technischer Inkompetenz, Überwachungswahn und politischen Stunts ist dabei weit entfernt von Szenarien Marke 1984. Und doch gibt es Gründe genug, den Behörden auf die Finger zu schauen. Der Vortrag beschäftigt sich mit diesen Gründen und wird auch Möglichkeiten zur Selbsthilfe diskutieren. Siehe auch http://www.datenschmutz.de</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200603-polizeidb/cs-200603-polizeidb_video.m4v" length="137327989" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200604: Informatik und Gesellschaft</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2006/04_Informatik_und_Gesellschaft</link>
            <description>2006 ist das "Jahr der Informatik". Doch in der Bevölkerung wird Informatik selten als Wissenschaft wahrgenommen. Informatiker sind meistens die Jungs, die einem beim Installieren oder Reparieren des eigenen Windows PCs helfen. Der Vortrag soll klarstellen, was Informatik als Wissenschaftsdisziplin wirklich ist, welche Themengebiete sie abdeckt, was die Informatik in der Vergangenheit geleistet hat, wo Informatik das alltägliche Leben berührt und welchen Herausforderungen sich die Informatik in der Zukunft noch stellen muss. Außerdem soll eine Diskussion angestoßen werden, welchen Stellenwert Informatik in Schule und Gesellschaft hat, ob dieser adäquat ist und wie man gegebenenfalls etwas daran ändern kann.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200604-informatik/cs-200604-informatik_video.m4v</guid>
            <pubDate>Mon, 24 Apr 2006 20:00:00 +0200</pubDate>
            <itunes:subtitle>2006 ist das "Jahr der Informatik". Doch in der Bevölkerung wird Informatik selten als Wissenschaft wahrgenommen. Informatiker sind meistens die Jungs, die einem beim Installieren oder Reparieren des eigenen Windows PCs helfen. Der Vortrag soll klars ...</itunes:subtitle>
            <itunes:summary>2006 ist das "Jahr der Informatik". Doch in der Bevölkerung wird Informatik selten als Wissenschaft wahrgenommen. Informatiker sind meistens die Jungs, die einem beim Installieren oder Reparieren des eigenen Windows PCs helfen. Der Vortrag soll klarstellen, was Informatik als Wissenschaftsdisziplin wirklich ist, welche Themengebiete sie abdeckt, was die Informatik in der Vergangenheit geleistet hat, wo Informatik das alltägliche Leben berührt und welchen Herausforderungen sich die Informatik in der Zukunft noch stellen muss. Außerdem soll eine Diskussion angestoßen werden, welchen Stellenwert Informatik in Schule und Gesellschaft hat, ob dieser adäquat ist und wie man gegebenenfalls etwas daran ändern kann.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200604-informatik/cs-200604-informatik_video.m4v" length="84771284" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200605: The Internet Communication Engine</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2006/05_The_Internet_Communication_Engine</link>
            <description>Die Internet Communcation Engine ist eine Middleware für verteilte Objekte. Entwickelt wird sie von der Firma ZeroC, die sie unter der GPL und bei Bedarf unter kommerzieller Lizenz vertreibt. Sie hat viele Ähnlichkeiten mit CORBA, soll aber einiges besser machen. Dieser Vortrag bietet eine kurze Einführung in Architekturen für verteilte Objekte und geht anschließend im Detail auf die ICE Middleware ein. Obwohl ICE viele Vorteile hat, wird der Vortrag mit einem fundierten Bashing abgeschlossen. Denn manche Dinge sind einfach nur #$%#@#$!! carrier lost...</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200605-ice/cs-200605-ice_video.m4v</guid>
            <pubDate>Mon, 08 May 2006 20:00:00 +0200</pubDate>
            <itunes:subtitle>Die Internet Communcation Engine ist eine Middleware für verteilte Objekte. Entwickelt wird sie von der Firma ZeroC, die sie unter der GPL und bei Bedarf unter kommerzieller Lizenz vertreibt. Sie hat viele Ähnlichkeiten mit CORBA, soll aber einiges  ...</itunes:subtitle>
            <itunes:summary>Die Internet Communcation Engine ist eine Middleware für verteilte Objekte. Entwickelt wird sie von der Firma ZeroC, die sie unter der GPL und bei Bedarf unter kommerzieller Lizenz vertreibt. Sie hat viele Ähnlichkeiten mit CORBA, soll aber einiges besser machen. Dieser Vortrag bietet eine kurze Einführung in Architekturen für verteilte Objekte und geht anschließend im Detail auf die ICE Middleware ein. Obwohl ICE viele Vorteile hat, wird der Vortrag mit einem fundierten Bashing abgeschlossen. Denn manche Dinge sind einfach nur #$%#@#$!! carrier lost...</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200605-ice/cs-200605-ice_video.m4v" length="96369829" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200706: Desktops, Benutzeroberflächen, Windowmanager</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2007/06_Desktop_und_Co</link>
            <description>Es werden verschiedene aktuelle, "antike" und zukünftige Bedienoberflächen und -konzepte vorgestellt und verglichen. Window-Manager und Desktop-Environments - von der Amiga Workbench bis zum ZWM</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200706-desktops/cs-200706-desktops_video.m4v</guid>
            <pubDate>Mon, 11 Jun 2007 20:00:00 +0200</pubDate>
            <itunes:subtitle>Es werden verschiedene aktuelle, "antike" und zukünftige Bedienoberflächen und -konzepte vorgestellt und verglichen. Window-Manager und Desktop-Environments - von der Amiga Workbench bis zum ZWM ...</itunes:subtitle>
            <itunes:summary>Es werden verschiedene aktuelle, "antike" und zukünftige Bedienoberflächen und -konzepte vorgestellt und verglichen. Window-Manager und Desktop-Environments - von der Amiga Workbench bis zum ZWM</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200706-desktops/cs-200706-desktops_video.m4v" length="186036560" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200712: verbesserte prozedurale Programmiersprachen</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2007/12_verbesserte_prozedurale_programmiersprachen</link>
            <description>Trotz ihrer weiten Verbreitung und allgemein hohen Akzeptanz, leiden objektorientierte Programmiersprachen (und damit auch ihre Benutzer) an einigen unangenehmen Problemen, für die es trotz intensiver Forschungsarbeit über viele Jahre noch keine rundum zufriedenstellenden Lösungen gibt. Unter anderem sind dies das Expression problem, das Binary method problem, das Diamond inheritance problem und Probleme mit sog. Crosscutting concerns. Da viele dieser Probleme in klassischen prozeduralen Programmiersprachen überhaupt nicht existieren, weil sie mit Vererbung und dynamischem Binden zusammenhängen, stellt sich die berechtigte Frage, ob sie nicht einfach durch eine Rückkehr zu diesen Sprachen überwunden werden können, sofern die genannten Konzepte anderweitig zur Verfügung gestellt werden können. Und tatsächlich erhält man durch relativ einfache Verallgemeinerungen der beiden Kernkonzepte prozeduraler Sprachen - Datenstrukturen und Prozeduren - verbesserte prozedurale Programmiersprachen, die objektorientierten Sprachen bzgl. Ausdrucksmächtigkeit und Flexibilität nicht nur ebenbürtig, sondern sogar überlegen sind. Unter anderem lassen sich für bestehende Typen nachträglich Obertypen definieren, virtuelle und nicht-virtuelle Vererbung können problemlos miteinander kombiniert werden, und Objekte können ihren Typ zur Laufzeit ändern, um beispielsweise eine Entwicklung von einer Person zu einem Studenten und wieder zurück zu ,,durchleben". Trotz dieser Flexibilität, die ansonsten bestenfalls von dynamisch getypten Sprachen angeboten wird, sind verbesserte prozedurale Sprachen statisch typsicher.

Die angesprochene Verallgemeinerung von Prozeduren deckt neben single, multiple und predicate-based method dispatch auch before, after und around advice aspektorientierter Sprachen ab, ohne hierfür zusätzliche spezialisierte Sprachmittel einführen zu müssen. Damit sind verbesserte prozedurale Sprachen insbesondere geeignet, bestehende Software-Systeme nachträglich nicht-invasiv (d. h. ohne bestehenden Code zu modifizieren oder neu übersetzen zu müssen) in ihrer Funktionalität zu erweitern oder zu modifizieren und damit dem Problem der unanticipated software evolution zu begegnen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200712-prozprog/cs-200712-prozprog_video.m4v</guid>
            <pubDate>Mon, 10 Dec 2007 20:00:00 +0100</pubDate>
            <itunes:subtitle>Trotz ihrer weiten Verbreitung und allgemein hohen Akzeptanz, leiden objektorientierte Programmiersprachen (und damit auch ihre Benutzer) an einigen unangenehmen Problemen, für die es trotz intensiver Forschungsarbeit über viele Jahre noch keine run ...</itunes:subtitle>
            <itunes:summary>Trotz ihrer weiten Verbreitung und allgemein hohen Akzeptanz, leiden objektorientierte Programmiersprachen (und damit auch ihre Benutzer) an einigen unangenehmen Problemen, für die es trotz intensiver Forschungsarbeit über viele Jahre noch keine rundum zufriedenstellenden Lösungen gibt. Unter anderem sind dies das Expression problem, das Binary method problem, das Diamond inheritance problem und Probleme mit sog. Crosscutting concerns. Da viele dieser Probleme in klassischen prozeduralen Programmiersprachen überhaupt nicht existieren, weil sie mit Vererbung und dynamischem Binden zusammenhängen, stellt sich die berechtigte Frage, ob sie nicht einfach durch eine Rückkehr zu diesen Sprachen überwunden werden können, sofern die genannten Konzepte anderweitig zur Verfügung gestellt werden können. Und tatsächlich erhält man durch relativ einfache Verallgemeinerungen der beiden Kernkonzepte prozeduraler Sprachen - Datenstrukturen und Prozeduren - verbesserte prozedurale Programmiersprachen, die objektorientierten Sprachen bzgl. Ausdrucksmächtigkeit und Flexibilität nicht nur ebenbürtig, sondern sogar überlegen sind. Unter anderem lassen sich für bestehende Typen nachträglich Obertypen definieren, virtuelle und nicht-virtuelle Vererbung können problemlos miteinander kombiniert werden, und Objekte können ihren Typ zur Laufzeit ändern, um beispielsweise eine Entwicklung von einer Person zu einem Studenten und wieder zurück zu ,,durchleben". Trotz dieser Flexibilität, die ansonsten bestenfalls von dynamisch getypten Sprachen angeboten wird, sind verbesserte prozedurale Sprachen statisch typsicher.

Die angesprochene Verallgemeinerung von Prozeduren deckt neben single, multiple und predicate-based method dispatch auch before, after und around advice aspektorientierter Sprachen ab, ohne hierfür zusätzliche spezialisierte Sprachmittel einführen zu müssen. Damit sind verbesserte prozedurale Sprachen insbesondere geeignet, bestehende Software-Systeme nachträglich nicht-invasiv (d. h. ohne bestehenden Code zu modifizieren oder neu übersetzen zu müssen) in ihrer Funktionalität zu erweitern oder zu modifizieren und damit dem Problem der unanticipated software evolution zu begegnen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200712-prozprog/cs-200712-prozprog_video.m4v" length="173477861" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200801: verbesserte IDE</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2008/01_Verbesserte_IDE</link>
            <description>In diesem Vortrag geht es darum wie wir in der Zukunft programmieren werden. Doch die Zukunft ist bereits hier. Undzwar in Smalltalk. Tim O'Reilly hat mal gesagt: "Die Zukunft ist hier, sie ist einfach noch nicht fair verteilt."

Ich werde versuchen ein bisschen zu demo'en wie man dort code schreibt gegenueber den klassischen methoden. Der Hauptteil wird durch Squeak Smalltalk belegt, doch man weiss ja nie was sich noch ergibt wenn es um IDEs geht. Hint: Lisp.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200801-ide/cs-200801-ide_video.m4v</guid>
            <pubDate>Mon, 14 Jan 2008 20:00:00 +0100</pubDate>
            <itunes:subtitle>In diesem Vortrag geht es darum wie wir in der Zukunft programmieren werden. Doch die Zukunft ist bereits hier. Undzwar in Smalltalk. Tim O'Reilly hat mal gesagt: "Die Zukunft ist hier, sie ist einfach noch nicht fair verteilt."

Ich werde versuchen e ...</itunes:subtitle>
            <itunes:summary>In diesem Vortrag geht es darum wie wir in der Zukunft programmieren werden. Doch die Zukunft ist bereits hier. Undzwar in Smalltalk. Tim O'Reilly hat mal gesagt: "Die Zukunft ist hier, sie ist einfach noch nicht fair verteilt."

Ich werde versuchen ein bisschen zu demo'en wie man dort code schreibt gegenueber den klassischen methoden. Der Hauptteil wird durch Squeak Smalltalk belegt, doch man weiss ja nie was sich noch ergibt wenn es um IDEs geht. Hint: Lisp.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200801-ide/cs-200801-ide_video.m4v" length="97444210" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200802: Lightning talks</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2008/02_Lightning_talks</link>
            <description>Nachdem erst der Ausfall des Chaos Seminar angekuendigt wurde gab es doch noch drei spontane Kurzvortraege:
* 's Äffle und 's Pferdle
* das Smalltalk Webframework "Seaside"
* Sicherheitsprobleme von Webbrowsern</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200802-lightningtalks/cs-200802-talks_video.m4v</guid>
            <pubDate>Mon, 11 Feb 2008 20:00:00 +0100</pubDate>
            <itunes:subtitle>Nachdem erst der Ausfall des Chaos Seminar angekuendigt wurde gab es doch noch drei spontane Kurzvortraege:
* 's Äffle und 's Pferdle
* das Smalltalk Webframework "Seaside"
* Sicherheitsprobleme von Webbrowsern ...</itunes:subtitle>
            <itunes:summary>Nachdem erst der Ausfall des Chaos Seminar angekuendigt wurde gab es doch noch drei spontane Kurzvortraege:
* 's Äffle und 's Pferdle
* das Smalltalk Webframework "Seaside"
* Sicherheitsprobleme von Webbrowsern</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200802-lightningtalks/cs-200802-talks_video.m4v" length="35561466" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200803: Datenschutz</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2008/03_Datenschutz</link>
            <description>Datenschutz ist beim Chaos Computer Club allgegenwärtig. Computersicherheit wird häufig als technischer Datenschutz verstanden. Begriffe wie "informationelle Selbstbestimmung" gehen locker über die Lippen. Jeder glaubt alles darüber zu wissen. Doch was ist Datenschutz eigentlich? Wo taucht er zum ersten mal auf und welche Rechtsgrundlagen bestehen in Deutschland?

Der Vortrag versucht für den juristischen Laien eine Einführung zu geben, und zeigt auch beispielhaft auf wo überall Datenschutzprobleme liegen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200803-datenschutz/cs-200803-datenschutz_video.m4v</guid>
            <pubDate>Mon, 10 Mar 2008 20:00:00 +0100</pubDate>
            <itunes:subtitle>Datenschutz ist beim Chaos Computer Club allgegenwärtig. Computersicherheit wird häufig als technischer Datenschutz verstanden. Begriffe wie "informationelle Selbstbestimmung" gehen locker über die Lippen. Jeder glaubt alles darüber zu wissen. Doc ...</itunes:subtitle>
            <itunes:summary>Datenschutz ist beim Chaos Computer Club allgegenwärtig. Computersicherheit wird häufig als technischer Datenschutz verstanden. Begriffe wie "informationelle Selbstbestimmung" gehen locker über die Lippen. Jeder glaubt alles darüber zu wissen. Doch was ist Datenschutz eigentlich? Wo taucht er zum ersten mal auf und welche Rechtsgrundlagen bestehen in Deutschland?

Der Vortrag versucht für den juristischen Laien eine Einführung zu geben, und zeigt auch beispielhaft auf wo überall Datenschutzprobleme liegen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200803-datenschutz/cs-200803-datenschutz_video.m4v" length="116528555" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200804: Voice over IP</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/04_voip</link>
            <description>Spätestens seit moderne DSL-Router auf dem Markt sind mit diversen neuen Features wie z.B. Internet-Telefonie, ist Voice-Over-IP (kurz VoIP) fast jedem bekannt geworden, der zu Hause seinen PC an's Internet angeschlossen hat. Wer mehr mit VoIP zu tun hat, hat vielleicht einmal Skype entdeckt und nutzt es möglicherweise auch regelmäßig.
Aber kaum einer hat sich je mit den tiefer liegenden Konzepten beschäftigt. Wie setzt man seine eigene Telefonanlage auf? Was ist das Sip-Protokoll, und wie funktioniert es? Wie wird der Übergang zwischen VoIP und dem Festnetz bewerkstelligt? Was ist mit Messengern?
Der Vortrag versucht zunächst einen allgemeinen Überblick über die Thematik und die Funktionsweise zu vermitteln, der auch dem Anfänger verständlich ist, und ist von vorn herein darauf ausgelegt, verschiedene Einzelthemen in Folgevorträgen zu vertiefen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200804-voip/cs-200804-voip_video.m4v</guid>
            <pubDate>Mon, 14 Apr 2008 20:00:00 +0200</pubDate>
            <itunes:subtitle>Spätestens seit moderne DSL-Router auf dem Markt sind mit diversen neuen Features wie z.B. Internet-Telefonie, ist Voice-Over-IP (kurz VoIP) fast jedem bekannt geworden, der zu Hause seinen PC an's Internet angeschlossen hat. Wer mehr mit VoIP zu tun ...</itunes:subtitle>
            <itunes:summary>Spätestens seit moderne DSL-Router auf dem Markt sind mit diversen neuen Features wie z.B. Internet-Telefonie, ist Voice-Over-IP (kurz VoIP) fast jedem bekannt geworden, der zu Hause seinen PC an's Internet angeschlossen hat. Wer mehr mit VoIP zu tun hat, hat vielleicht einmal Skype entdeckt und nutzt es möglicherweise auch regelmäßig.
Aber kaum einer hat sich je mit den tiefer liegenden Konzepten beschäftigt. Wie setzt man seine eigene Telefonanlage auf? Was ist das Sip-Protokoll, und wie funktioniert es? Wie wird der Übergang zwischen VoIP und dem Festnetz bewerkstelligt? Was ist mit Messengern?
Der Vortrag versucht zunächst einen allgemeinen Überblick über die Thematik und die Funktionsweise zu vermitteln, der auch dem Anfänger verständlich ist, und ist von vorn herein darauf ausgelegt, verschiedene Einzelthemen in Folgevorträgen zu vertiefen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200804-voip/cs-200804-voip_video.m4v" length="38112809" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200805: dtrace</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/05_dtrace</link>
            <description>dtrace ist ein - ursprünglich von Sun geschriebenes - Werkzeug zum Tracing von Programmabläufen in Kernel- und Userland. Mittels in einer Sprache namens D geschriebenen Skripten instrumentiert man seine Programme zur Laufzeit und ohne Notwendigkeit einer Neuübersetzung und kann mittels sog. Probes alle möglichen Performanceparameter erfassen. Von Solaris hat sich dtrace mittlerweile über BSD, MacOS X zu Exoten wie QNX oder in Anwendungen wie Firefox verbreitet. Damit ist dtrace heute das ideale Tool für alle, die wissen wollen, was ihr OS oder ihre Software unter der Haube so alles macht. Der Vortrag zeigt anhand vieler Beispiele die Anwendung und Mächtigkeit von dtrace auf.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200805-dtrace/cs-200805-dtrace_video.m4v</guid>
            <pubDate>Mon, 05 May 2008 20:00:00 +0200</pubDate>
            <itunes:subtitle>dtrace ist ein - ursprünglich von Sun geschriebenes - Werkzeug zum Tracing von Programmabläufen in Kernel- und Userland. Mittels in einer Sprache namens D geschriebenen Skripten instrumentiert man seine Programme zur Laufzeit und ohne Notwendigkeit  ...</itunes:subtitle>
            <itunes:summary>dtrace ist ein - ursprünglich von Sun geschriebenes - Werkzeug zum Tracing von Programmabläufen in Kernel- und Userland. Mittels in einer Sprache namens D geschriebenen Skripten instrumentiert man seine Programme zur Laufzeit und ohne Notwendigkeit einer Neuübersetzung und kann mittels sog. Probes alle möglichen Performanceparameter erfassen. Von Solaris hat sich dtrace mittlerweile über BSD, MacOS X zu Exoten wie QNX oder in Anwendungen wie Firefox verbreitet. Damit ist dtrace heute das ideale Tool für alle, die wissen wollen, was ihr OS oder ihre Software unter der Haube so alles macht. Der Vortrag zeigt anhand vieler Beispiele die Anwendung und Mächtigkeit von dtrace auf.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200805-dtrace/cs-200805-dtrace_video.m4v" length="68837511" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200807: Technikphilosophie</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/07_technikphilosophie</link>
            <description>Wir werden eine sehr kurze Vorstellung von Philosophie im Allgemeinen bekommen und dann auf Technikphilosophie im Besondern eingehen. Da die Vorkenntnisse des Publikums nicht klar sind, werden wir inhaltlich flexibel bleiben und uns aus einer Auswahl der üblichen technikphilosophischen Grundthemen bedienen (Technik und/als Macht, Zweck-Mittel-Relation, Philosophie als Welterklärung, chinesisches Zimmer, Wertigkeit technischer Berufe und technischen Handelns, Rationalismus vs. Empirismus, anthropologische Sicht und Werkzeuggebrauch, Technikethik, Technik als Kultur und soziologische Beschreibungen, Technokratie, ...). Michael ist Student/Diplomand in Informatik mit Anwendungsfach Philosophie an der Uni Ulm.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200807-technikphilosophie/cs-200807-technikphilosophie_video.m4v</guid>
            <pubDate>Mon, 14 July 2008 20:00:00 +0200</pubDate>
            <itunes:subtitle>Wir werden eine sehr kurze Vorstellung von Philosophie im Allgemeinen bekommen und dann auf Technikphilosophie im Besondern eingehen. Da die Vorkenntnisse des Publikums nicht klar sind, werden wir inhaltlich flexibel bleiben und uns aus einer Auswahl  ...</itunes:subtitle>
            <itunes:summary>Wir werden eine sehr kurze Vorstellung von Philosophie im Allgemeinen bekommen und dann auf Technikphilosophie im Besondern eingehen. Da die Vorkenntnisse des Publikums nicht klar sind, werden wir inhaltlich flexibel bleiben und uns aus einer Auswahl der üblichen technikphilosophischen Grundthemen bedienen (Technik und/als Macht, Zweck-Mittel-Relation, Philosophie als Welterklärung, chinesisches Zimmer, Wertigkeit technischer Berufe und technischen Handelns, Rationalismus vs. Empirismus, anthropologische Sicht und Werkzeuggebrauch, Technikethik, Technik als Kultur und soziologische Beschreibungen, Technokratie, ...). Michael ist Student/Diplomand in Informatik mit Anwendungsfach Philosophie an der Uni Ulm.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200807-technikphilosophie/cs-200807-technikphilosophie_video.m4v" length="98120373" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200809: Dokumentation Infrastruktur</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/09_Dokumentation_Infrastruktur</link>
            <description>Was läuft eigentlich alles auf der Dontpanic. Warum, Weshalb, Wieso ist das eigentlich alles so?</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200809-infrastruktur/cs-200809-infrastruktur_video.m4v</guid>
            <pubDate>Mon, 08 September 2008 20:00:00 +0200</pubDate>
            <itunes:subtitle>Was läuft eigentlich alles auf der Dontpanic. Warum, Weshalb, Wieso ist das eigentlich alles so? ...</itunes:subtitle>
            <itunes:summary>Was läuft eigentlich alles auf der Dontpanic. Warum, Weshalb, Wieso ist das eigentlich alles so?</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200809-infrastruktur/cs-200809-infrastruktur_video.m4v" length="97394430" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200810: Meinungsfreiheit</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/10_Meinungsfreiheit</link>
            <description>"Alle Informationen sollen frei sein" war eine der ersten Forderungen des CCC. Im April 2002 organisierte der CCC eine Demo gegen Netzzensur in Düsseldorf. Jeder glaubt, alles darüber zu wissen. Doch was ist Zensur eigentlich? Welchen Einfluss haben die Medien, welche besonderen Rechte und Pflichten hat die Presse? Wo gibt es Zensur oder Meinungsfreiheit in welcher Form und welche Rechtsgrundlagen bestehen in Deutschland?

Der Vortrag versucht für den juristischen Laien eine Einführung zu geben, und zeigt auch beispielhaft auf, wo überall Einschränkungen der Meinungsfreiheit liegen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200810-meinungsfreiheit/cs-200810-meinungsfreiheit_video.m4v</guid>
            <pubDate>Mon, 13 October 2008 20:00:00 +0200</pubDate>
            <itunes:subtitle>"Alle Informationen sollen frei sein" war eine der ersten Forderungen des CCC. Im April 2002 organisierte der CCC eine Demo gegen Netzzensur in Düsseldorf. Jeder glaubt, alles darüber zu wissen. Doch was ist Zensur eigentlich? Welchen Einfluss haben ...</itunes:subtitle>
            <itunes:summary>"Alle Informationen sollen frei sein" war eine der ersten Forderungen des CCC. Im April 2002 organisierte der CCC eine Demo gegen Netzzensur in Düsseldorf. Jeder glaubt, alles darüber zu wissen. Doch was ist Zensur eigentlich? Welchen Einfluss haben die Medien, welche besonderen Rechte und Pflichten hat die Presse? Wo gibt es Zensur oder Meinungsfreiheit in welcher Form und welche Rechtsgrundlagen bestehen in Deutschland?

Der Vortrag versucht für den juristischen Laien eine Einführung zu geben, und zeigt auch beispielhaft auf, wo überall Einschränkungen der Meinungsfreiheit liegen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200810-meinungsfreiheit/cs-200810-meinungsfreiheit_video.m4v" length="137406220" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200811: Das "S" in HTTPS</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/11_https</link>
            <description>Wer schon einmal online etwas eingekauft oder versteigert hat, hat (hoffentlich!) dabei ein Protokoll namens HTTPS erlebt. In diesem - für Otto Normalverbraucher geeigneten - Vortrag des Chaosseminars wird erklärt, was es damit und mit den lästigen"Sicherheitswarnung" der Webbrowser auf sich hat.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200811-https/cs-200811-https_video.m4v</guid>
            <pubDate>Mon, 11 November 2008 20:00:00 +0100</pubDate>
            <itunes:subtitle>Wer schon einmal online etwas eingekauft oder versteigert hat, hat (hoffentlich!) dabei ein Protokoll namens HTTPS erlebt. In diesem - für Otto Normalverbraucher geeigneten - Vortrag des Chaosseminars wird erklärt, was es damit und mit den lästigen ...</itunes:subtitle>
            <itunes:summary>Wer schon einmal online etwas eingekauft oder versteigert hat, hat (hoffentlich!) dabei ein Protokoll namens HTTPS erlebt. In diesem - für Otto Normalverbraucher geeigneten - Vortrag des Chaosseminars wird erklärt, was es damit und mit den lästigen"Sicherheitswarnung" der Webbrowser auf sich hat.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200811-https/cs-200811-https_video.m4v" length="38492092" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200812: RIOT</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2008/12_riot</link>
            <description>RIOT is ein C++ Framework für skalierbare und effiziente Applikationen auf Hardware mit parallelen I/O und CPU Resourcen.
Skalierbar heißt dabei, dass der Verwaltungsaufwand proportional kaum vorhanden ist, so dass eine Verdopplung der Hardware Resourcen nahezu eine Verdopplung des maximalen Durchsatzes bringt.
Effizient heißt dabei, dass eine Resource niemals leer läuft, obwohl es Arbeit für sie gäbe.
Bei logix-tt war Alexander der Entwickler von RIOT. Ein Kommunikationsserver für tausende, simultane Clients über ein kryptographisches Protokoll läuft dort problemlos mit RIOT.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200812-riot/cs-200812-riot_video.m4v</guid>
            <pubDate>Mon, 8 December 2008 20:00:00 +0100</pubDate>
            <itunes:subtitle>RIOT is ein C++ Framework für skalierbare und effiziente Applikationen auf Hardware mit parallelen I/O und CPU Resourcen.
Skalierbar heißt dabei, dass der Verwaltungsaufwand proportional kaum vorhanden ist, so dass eine Verdopplung der Hardware Reso ...</itunes:subtitle>
            <itunes:summary>RIOT is ein C++ Framework für skalierbare und effiziente Applikationen auf Hardware mit parallelen I/O und CPU Resourcen.
Skalierbar heißt dabei, dass der Verwaltungsaufwand proportional kaum vorhanden ist, so dass eine Verdopplung der Hardware Resourcen nahezu eine Verdopplung des maximalen Durchsatzes bringt.
Effizient heißt dabei, dass eine Resource niemals leer läuft, obwohl es Arbeit für sie gäbe.
Bei logix-tt war Alexander der Entwickler von RIOT. Ein Kommunikationsserver für tausende, simultane Clients über ein kryptographisches Protokoll läuft dort problemlos mit RIOT.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200812-riot/cs-200812-riot_video.m4v" length="67194580" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200901: Mailman PGP/SMIME extension</title>
            <link>http://ulm.ccc.de/ChaosSeminar/2009/01_Mailman_PGP_SMIME</link>
            <description>Joost van Baal ist der Maintainer eines OpenPGP- und S/MIME-erweiterten Mailman - einem Projekt, das bei uns hier als Mailman-Patch für die Ulmer Intern-Mailingliste begann. Joost wird über die Entwicklung der Erweiterung, die technischen Schwierigkeiten und Hindernisse, sowie die Verbreitung und die Zukunft des Projekts berichten:

The talk will start with a very short overview of the history of Mailman and the mailman-pgp-smime project. Some remarks will be made on how to install and configure the software, so that one can try it. Currently supported features will be mentioned, as well as an overview of development plans. One will learn how to contribute to the project; an overview of the revision control system used will be given. Some remarks on the future of the patch will be made: will it be shipped with Mailman itself?

The talk will be given in English.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200901-mailman/cs-200901-mailman_video.m4v</guid>
            <pubDate>Mon, 2 January 2009 20:00:00 +0100</pubDate>
            <itunes:subtitle>Joost van Baal ist der Maintainer eines OpenPGP- und S/MIME-erweiterten Mailman - einem Projekt, das bei uns hier als Mailman-Patch für die Ulmer Intern-Mailingliste begann. Joost wird über die Entwicklung der Erweiterung, die technischen Schwierigk ...</itunes:subtitle>
            <itunes:summary>Joost van Baal ist der Maintainer eines OpenPGP- und S/MIME-erweiterten Mailman - einem Projekt, das bei uns hier als Mailman-Patch für die Ulmer Intern-Mailingliste begann. Joost wird über die Entwicklung der Erweiterung, die technischen Schwierigkeiten und Hindernisse, sowie die Verbreitung und die Zukunft des Projekts berichten:

The talk will start with a very short overview of the history of Mailman and the mailman-pgp-smime project. Some remarks will be made on how to install and configure the software, so that one can try it. Currently supported features will be mentioned, as well as an overview of development plans. One will learn how to contribute to the project; an overview of the revision control system used will be given. Some remarks on the future of the patch will be made: will it be shipped with Mailman itself?

The talk will be given in English.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200901-mailman/cs-200901-mailman_video.m4v" length="62163555" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200903: Der Masqmail MTA</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/03_masqmail</link>
            <description>Ein Vortrag über masqmail, das Thema der Diplomarbeit von Markus Schnalke.

Der Vortrag wird _keine_ reine Beschreibung des Diplomarbeit sein, und schon gar keine trockene. Es sollen Vorschläge und Ideen aus dem Publikum einfließen, es soll diskutiert werden, und letztendlich soll dieser Vortrag auch dazu motivieren masqmail einzusetzen, oder sogar selbst bei der Weiterentwicklung mitzuhelfen.

Hier ist der Abriss dieser Arbeit. Der Vortrag wird auf deutsch sein.

"masqmail is a mail transfer agent for workstations and small networks, a
much smaller replacement for sendmail. It has be orphaned by its author
more than five years ago and remained unchanged since then, in a world
where emailing did change. Nevertheless has masqmail unique advantages that
makes it still a valuable software.

This diploma thesis is a scientific planning effort to revive masqmail. It
provides a highly structured analysis of masqmail and its environment.
Modern requirements for masqmail are compared against the current state of
the program to receive a list of pending work tasks. Further development
strategies are carefully compared and discussed. Finally concrete plans and
recommendations are defined with the goal of turning masqmail into a
modern mail transfer agent again."</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200903-masqmail/cs-200903-masqmail_video.m4v</guid>
            <pubDate>Mon, 9 March 2009 20:00:00 +0100</pubDate>
            <itunes:subtitle>Ein Vortrag über masqmail, das Thema der Diplomarbeit von Markus Schnalke.

Der Vortrag wird _keine_ reine Beschreibung des Diplomarbeit sein, und schon gar keine trockene. Es sollen Vorschläge und Ideen aus dem Publikum einfließen, es soll diskuti ...</itunes:subtitle>
            <itunes:summary>Ein Vortrag über masqmail, das Thema der Diplomarbeit von Markus Schnalke.

Der Vortrag wird _keine_ reine Beschreibung des Diplomarbeit sein, und schon gar keine trockene. Es sollen Vorschläge und Ideen aus dem Publikum einfließen, es soll diskutiert werden, und letztendlich soll dieser Vortrag auch dazu motivieren masqmail einzusetzen, oder sogar selbst bei der Weiterentwicklung mitzuhelfen.

Hier ist der Abriss dieser Arbeit. Der Vortrag wird auf deutsch sein.

"masqmail is a mail transfer agent for workstations and small networks, a
much smaller replacement for sendmail. It has be orphaned by its author
more than five years ago and remained unchanged since then, in a world
where emailing did change. Nevertheless has masqmail unique advantages that
makes it still a valuable software.

This diploma thesis is a scientific planning effort to revive masqmail. It
provides a highly structured analysis of masqmail and its environment.
Modern requirements for masqmail are compared against the current state of
the program to receive a list of pending work tasks. Further development
strategies are carefully compared and discussed. Finally concrete plans and
recommendations are defined with the goal of turning masqmail into a
modern mail transfer agent again."</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200903-masqmail/cs-200903-masqmail_video.m4v" length="117363644" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200904: PostCanvas</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/04_PostCanvas</link>
            <description>PostCanvas ist ein kleiner PostScript Interpreter, umgesetzt in JavaScript und HTML5. Warum macht man sowas? Ach, es hat sich einfach angeboten, ja geradezu aufgedrängt. Die gegebenen Komponenten passen einfach zu schön zusammen. Mit wirklich überschaubarem Aufwand lassen sich nahezu beliebige PostScript Level 1 Programme interpretieren, komplette EPS Dokumente in modernen Webbrowsern ohne Plugins anzeigen und wir werden sogar eine interaktive Shell für kleine Experimente bekommen.

Anhand von PostCanvas lässt sich zudem prima die Herkunft und Funktionsweise des HTML5 Canvas Element demonstrieren, man kann JavaScript als ernsthafte Programmierumgebung ausprobieren, ein wenig auf die historische Bedeutung von PostScript eingehen, auf das Konzept und die Verbreitung von Stack Maschinen hinweisen und die Eigenschaften von gnädigen Dokumentenformaten und domänenspezifischen Programmiersprachen gegenüber strikten XML Datenbeschreibungsnamespaces (e.g. SVG) ansprechen.

Im Anschluss an das Unterhaltungsprogramm wird der Quellcode unter APLv2 veröffentlicht.

Anmerkung des Videoteams: Leider lässt die Ton- und Videoqualtät zu wünschen übrig, der Ton ist bei der Aufnahme stark übersteuert und das Bild ist zu dunkel. Im Nachhinein lässt sich da leider nicht viel machen.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200904-ps-interpreter-html5/cs-200904-ps-interpreter-html5_video.m4v</guid>
            <pubDate>Mon, 20 April 2009 20:00:00 +0200</pubDate>
            <itunes:subtitle>PostCanvas ist ein kleiner PostScript Interpreter, umgesetzt in JavaScript und HTML5. Warum macht man sowas? Ach, es hat sich einfach angeboten, ja geradezu aufgedrängt. Die gegebenen Komponenten passen einfach zu schön zusammen. Mit wirklich übers ...</itunes:subtitle>
            <itunes:summary>PostCanvas ist ein kleiner PostScript Interpreter, umgesetzt in JavaScript und HTML5. Warum macht man sowas? Ach, es hat sich einfach angeboten, ja geradezu aufgedrängt. Die gegebenen Komponenten passen einfach zu schön zusammen. Mit wirklich überschaubarem Aufwand lassen sich nahezu beliebige PostScript Level 1 Programme interpretieren, komplette EPS Dokumente in modernen Webbrowsern ohne Plugins anzeigen und wir werden sogar eine interaktive Shell für kleine Experimente bekommen.

Anhand von PostCanvas lässt sich zudem prima die Herkunft und Funktionsweise des HTML5 Canvas Element demonstrieren, man kann JavaScript als ernsthafte Programmierumgebung ausprobieren, ein wenig auf die historische Bedeutung von PostScript eingehen, auf das Konzept und die Verbreitung von Stack Maschinen hinweisen und die Eigenschaften von gnädigen Dokumentenformaten und domänenspezifischen Programmiersprachen gegenüber strikten XML Datenbeschreibungsnamespaces (e.g. SVG) ansprechen.

Im Anschluss an das Unterhaltungsprogramm wird der Quellcode unter APLv2 veröffentlicht.

Anmerkung des Videoteams: Leider lässt die Ton- und Videoqualtät zu wünschen übrig, der Ton ist bei der Aufnahme stark übersteuert und das Bild ist zu dunkel. Im Nachhinein lässt sich da leider nicht viel machen.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200904-ps-interpreter-html5/cs-200904-ps-interpreter-html5_video.m4v" length="78558875" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200905: Surprise</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/05_surprise</link>
            <description>Nico erzählt was über bootris;
Michel erzählt was über "Booten mit dem Mac";
Jason erzählt was über OpenCL;
jemand erzählt was über Softwarepatente und Urheberrecht;
jemand anderes erzählt was über Fnordlichter;
Matthias erzählt was über Lockpicking;
Felix erzählt was über Spiegelneuronen;
Für jeden ist also was passendes dabei.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200905-surprise/cs-200905-surprise_video.m4v</guid>
            <pubDate>Mon, 20 May 2009 20:00:00 +0200</pubDate>
            <itunes:subtitle>Nico erzählt was über bootris;
Michel erzählt was über "Booten mit dem Mac";
Jason erzählt was über OpenCL;
jemand erzählt was über Softwarepatente und Urheberrecht;
jemand anderes erzählt was über Fnordlichter;
Matthias erzählt was über L ...</itunes:subtitle>
            <itunes:summary>Nico erzählt was über bootris;
Michel erzählt was über "Booten mit dem Mac";
Jason erzählt was über OpenCL;
jemand erzählt was über Softwarepatente und Urheberrecht;
jemand anderes erzählt was über Fnordlichter;
Matthias erzählt was über Lockpicking;
Felix erzählt was über Spiegelneuronen;
Für jeden ist also was passendes dabei.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200905-surprise/cs-200905-surprise_video.m4v" length="87258024" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200907: Linux Kernel Hacking</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/07_Linux_Kernel_Hacking</link>
            <description>Unter der Haube von allen Linux-Distributionen -- Debian GNU/Hurd mal ausgenommen -- schafft der Linux-Kernel. Weshalb man einen Kernel braucht und wie er funktioniert, wird als Theorie kurz eingeführt. Wie man dem Kernel mit eigenem C-Code einen Tritt verpasst, wird an Hand von Codebeispielen erläutert. Außerdem werden einige Tools zur Linux-Kernel-Entwicklung gezeigt.

Wegen dem Umfang wurde der Vortrag aufgeteilt. Im ersten Teil werden folgende Punkte besprochen:

* Grundlagen Betriebssysteme
* Benötigte Tools
* Konfiguration und Compilieren
* Unterschiede zur C-Anwendungsprogrammierung
* Bootvorgang von Linux</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200907-linuxkernel/cs-200907-kernel_video.m4v</guid>
            <pubDate>Mon, 13 July 2009 20:00:00 +0200</pubDate>
            <itunes:subtitle>Unter der Haube von allen Linux-Distributionen -- Debian GNU/Hurd mal ausgenommen -- schafft der Linux-Kernel. Weshalb man einen Kernel braucht und wie er funktioniert, wird als Theorie kurz eingeführt. Wie man dem Kernel mit eigenem C-Code einen Tri ...</itunes:subtitle>
            <itunes:summary>Unter der Haube von allen Linux-Distributionen -- Debian GNU/Hurd mal ausgenommen -- schafft der Linux-Kernel. Weshalb man einen Kernel braucht und wie er funktioniert, wird als Theorie kurz eingeführt. Wie man dem Kernel mit eigenem C-Code einen Tritt verpasst, wird an Hand von Codebeispielen erläutert. Außerdem werden einige Tools zur Linux-Kernel-Entwicklung gezeigt.

Wegen dem Umfang wurde der Vortrag aufgeteilt. Im ersten Teil werden folgende Punkte besprochen:

* Grundlagen Betriebssysteme
* Benötigte Tools
* Konfiguration und Compilieren
* Unterschiede zur C-Anwendungsprogrammierung
* Bootvorgang von Linux</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200907-linuxkernel/cs-200907-kernel_video.m4v" length="78901038" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200909: Linux Kernel Hacking II</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/09_Linux_Kernel_Hacking_II</link>
            <description>Nach der Einführung im ersten Teil, geht es jetzt ans Eingemachte. Wie man dem Kernel mit eigenem C-Code einen Tritt verpasst, wird an Hand von Codebeispielen erläutert. Außerdem werden einige Tools zur Linux-Kernel-Entwicklung gezeigt.

* Minimales Kernel-Modul
* Einfacher Zeichenorientierter Gerätetreiber
* Out-of-memory Killer
* Fehlerhafter Code im Kernel
* Wo bekommt man Dokumentation?
* Was ist für Commits in den Mainline-Kernel zu beachten</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200909-linuxkernel2/cs-200909-kernel2_video.m4v</guid>
            <pubDate>Mon, 14 Sep 2009 20:00:00 +0200</pubDate>
            <itunes:subtitle>Nach der Einführung im ersten Teil, geht es jetzt ans Eingemachte. Wie man dem Kernel mit eigenem C-Code einen Tritt verpasst, wird an Hand von Codebeispielen erläutert. Außerdem werden einige Tools zur Linux-Kernel-Entwicklung gezeigt.

* Minimale ...</itunes:subtitle>
            <itunes:summary>Nach der Einführung im ersten Teil, geht es jetzt ans Eingemachte. Wie man dem Kernel mit eigenem C-Code einen Tritt verpasst, wird an Hand von Codebeispielen erläutert. Außerdem werden einige Tools zur Linux-Kernel-Entwicklung gezeigt.

* Minimales Kernel-Modul
* Einfacher Zeichenorientierter Gerätetreiber
* Out-of-memory Killer
* Fehlerhafter Code im Kernel
* Wo bekommt man Dokumentation?
* Was ist für Commits in den Mainline-Kernel zu beachten</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200909-linuxkernel2/cs-200909-kernel2_video.m4v" length="71934954" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200910: Alte Softwareschätze</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/10_Softwareschaetze</link>
            <description>Dieser Vortrag soll Software vorstellen die schon einige Jahre auf dem Buckel hat. Vieles wird man schon vom Namen her gehört haben, aber nur wenige werden damit selbst gearbeitet haben oder noch immer arbeiten.

Doch diese Programme und Programmiersprachen, auch wenn sie angestaubt sind, gehören noch lange nicht zum Alten Eisen. Sie erledigen getreu ihre Dienste, sie decken bestimmte Nischen besser ab als ihr Nachfolger, sie sind auf vielen Systemen verfügbar ... und ja, man muss sie einfach mal verwendet haben! Dieser Vortrag soll eben dazu motivieren.

* Man darf miterleben wie Unix geschrieben wurde.
* Es wird beantwortet warum man Perl nicht unbedingt braucht.
* ... und überall wird ein bisschen Unix-Philosophie versteckt sein

Die Präsentation dieser Softwareschätze wird mit technischen Details und Hintergrundwissen aus vergangenen Zeiten ausgeschmückt werden. Tutorials für einzelne Tools können nicht erwartet werden -- viele Anregungen und Ansatzpunkte für eigene Erkundungen aber sehr wohl.

In den Hauptrollen: ed, sed, awk</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200910-softwareschaetze/cs-200910-softwareschaetze_video.m4v</guid>
            <pubDate>Mon, 13 Oct 2009 20:00:00 +0200</pubDate>
            <itunes:subtitle>Dieser Vortrag soll Software vorstellen die schon einige Jahre auf dem Buckel hat. Vieles wird man schon vom Namen her gehört haben, aber nur wenige werden damit selbst gearbeitet haben oder noch immer arbeiten.

Doch diese Programme und Programmiers ...</itunes:subtitle>
            <itunes:summary>Dieser Vortrag soll Software vorstellen die schon einige Jahre auf dem Buckel hat. Vieles wird man schon vom Namen her gehört haben, aber nur wenige werden damit selbst gearbeitet haben oder noch immer arbeiten.

Doch diese Programme und Programmiersprachen, auch wenn sie angestaubt sind, gehören noch lange nicht zum Alten Eisen. Sie erledigen getreu ihre Dienste, sie decken bestimmte Nischen besser ab als ihr Nachfolger, sie sind auf vielen Systemen verfügbar ... und ja, man muss sie einfach mal verwendet haben! Dieser Vortrag soll eben dazu motivieren.

* Man darf miterleben wie Unix geschrieben wurde.
* Es wird beantwortet warum man Perl nicht unbedingt braucht.
* ... und überall wird ein bisschen Unix-Philosophie versteckt sein

Die Präsentation dieser Softwareschätze wird mit technischen Details und Hintergrundwissen aus vergangenen Zeiten ausgeschmückt werden. Tutorials für einzelne Tools können nicht erwartet werden -- viele Anregungen und Ansatzpunkte für eigene Erkundungen aber sehr wohl.

In den Hauptrollen: ed, sed, awk</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200910-softwareschaetze/cs-200910-softwareschaetze_video.m4v" length="123810395" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200911: troff and friends</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/11_troff-and-friends</link>
            <description>Tex kennt und verwendet heute fast jeder Computerbegeisterte wenn er Dokumente erstellen soll. Neben Tex gibt es aber auch andere Textsatzsysteme die keineswegs schlechter, nur unbekannter, sind. Eines ist troff das aus den Bell Labs kommt und sehr eng mit der Entstehung von Unix verwoben ist.

Troff wird heute in erster Linie zum Formatieren von Manpages verwendet. Doch auch bemerkenswert viele Computerbücher sind mit troff gesetzt, was zeigt, dass troff eine ernstzunehmende Software im professionellen Bereich ist. Nichts desto trotz ist troff inzwischen leicht angestaubt und kaum noch bekannt. Dieser Vortrag wird den Staub wegfegen und zeigen, dass es sich lohnt sich mit troff zu beschäftigen.

Ausgehend von den geschichtlichen Hintergründen wird das Design von troff erklärt. Die Benutzung von troff selbst wird vorgestellt werden, sowie die bekanntesten Macropakete (die die Benutzung erleichtern). Zudem werden verschiedene Preprozessoren gezeigt und erklärt werden. Diese erlauben es zum Beispiel sehr einfach mathematische Formeln oder Diagramme zu erzeugen.

Ein großer Teil des Vortrags wird die Live-Demonstration der Programe einnehmen. Publikumsinteraktion ist ausdrücklich erwünscht.

In den Hauptrollen: troff, nroff, tbl, eqn, refer, pic</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200911-troff/cs-200911-troff_video.m4v</guid>
            <pubDate>Mon, 9 Nov 2009 20:00:00 +0100</pubDate>
            <itunes:subtitle>Tex kennt und verwendet heute fast jeder Computerbegeisterte wenn er Dokumente erstellen soll. Neben Tex gibt es aber auch andere Textsatzsysteme die keineswegs schlechter, nur unbekannter, sind. Eines ist troff das aus den Bell Labs kommt und sehr en ...</itunes:subtitle>
            <itunes:summary>Tex kennt und verwendet heute fast jeder Computerbegeisterte wenn er Dokumente erstellen soll. Neben Tex gibt es aber auch andere Textsatzsysteme die keineswegs schlechter, nur unbekannter, sind. Eines ist troff das aus den Bell Labs kommt und sehr eng mit der Entstehung von Unix verwoben ist.

Troff wird heute in erster Linie zum Formatieren von Manpages verwendet. Doch auch bemerkenswert viele Computerbücher sind mit troff gesetzt, was zeigt, dass troff eine ernstzunehmende Software im professionellen Bereich ist. Nichts desto trotz ist troff inzwischen leicht angestaubt und kaum noch bekannt. Dieser Vortrag wird den Staub wegfegen und zeigen, dass es sich lohnt sich mit troff zu beschäftigen.

Ausgehend von den geschichtlichen Hintergründen wird das Design von troff erklärt. Die Benutzung von troff selbst wird vorgestellt werden, sowie die bekanntesten Macropakete (die die Benutzung erleichtern). Zudem werden verschiedene Preprozessoren gezeigt und erklärt werden. Diese erlauben es zum Beispiel sehr einfach mathematische Formeln oder Diagramme zu erzeugen.

Ein großer Teil des Vortrags wird die Live-Demonstration der Programe einnehmen. Publikumsinteraktion ist ausdrücklich erwünscht.

In den Hauptrollen: troff, nroff, tbl, eqn, refer, pic</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200911-troff/cs-200911-troff_video.m4v" length="144462594" type="video/x-m4v" />
        </item>
        <item>
            <title>CS200912: Manipulationspsychologie</title>
            <link>http://www.ulm.ccc.de/ChaosSeminar/2009/12_Manipulationspsychologie</link>
            <description>In guten Sicherheitssystemen sind nicht nur technische Maßnahmen ausschlaggebend. Bei genauer Betrachtung zeigt sich, dass die Sicherheitsstrategie immer auch Menschen enthält (z.B. den Administrator). Angriffe auf diese menschliche Komponente verdienen also ebenfalls volle Aufmerksamkeit.

Mit gutem Grund hat das sogenannte "Social Engineering", welches genau diese "Sicherheitslücken" anvisiert, unter Hackern bereits eine lange Tradition. "Hacken" muss sich folglich nicht auf Geräte beschränken. "Hacken" kann auch bedeuten, dass ausgefeilte Psychologie zum Einsatz kommt.

Der Vortrag beschränkt sich jedoch nicht auf "Social Engineering", sondern soll aufzeigen, dass wir von manipulativer Psychologie regelrecht umzingelt sind. Besonders die Werbeindustrie, Geheimdienste, Sekten und Betrüger machen sich allerlei Erkenntnisse der Psychologie zu nutze.</description>
            <guid>http://archiv.ulm.ccc.de/chaosseminar/200912-manipulationspsychologie/cs-200912-manipmeth_video.m4v</guid>
            <pubDate>Mon, 14 Dec 2009 20:00:00 +0100</pubDate>
            <itunes:subtitle>In guten Sicherheitssystemen sind nicht nur technische Maßnahmen ausschlaggebend. Bei genauer Betrachtung zeigt sich, dass die Sicherheitsstrategie immer auch Menschen enthält (z.B. den Administrator). Angriffe auf diese menschliche Komponente verdi ...</itunes:subtitle>
            <itunes:summary>In guten Sicherheitssystemen sind nicht nur technische Maßnahmen ausschlaggebend. Bei genauer Betrachtung zeigt sich, dass die Sicherheitsstrategie immer auch Menschen enthält (z.B. den Administrator). Angriffe auf diese menschliche Komponente verdienen also ebenfalls volle Aufmerksamkeit.

Mit gutem Grund hat das sogenannte "Social Engineering", welches genau diese "Sicherheitslücken" anvisiert, unter Hackern bereits eine lange Tradition. "Hacken" muss sich folglich nicht auf Geräte beschränken. "Hacken" kann auch bedeuten, dass ausgefeilte Psychologie zum Einsatz kommt.

Der Vortrag beschränkt sich jedoch nicht auf "Social Engineering", sondern soll aufzeigen, dass wir von manipulativer Psychologie regelrecht umzingelt sind. Besonders die Werbeindustrie, Geheimdienste, Sekten und Betrüger machen sich allerlei Erkenntnisse der Psychologie zu nutze.</itunes:summary>
            <enclosure url="http://archiv.ulm.ccc.de/chaosseminar/200912-manipulationspsychologie/cs-200912-manipmeth_video.m4v" length="60161045" type="video/x-m4v" />
        </item>
    </channel>
</rss>
